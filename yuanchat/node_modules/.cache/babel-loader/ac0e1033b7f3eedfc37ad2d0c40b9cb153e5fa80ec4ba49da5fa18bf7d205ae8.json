{"ast":null,"code":"import { useStore } from 'vuex';\nimport NIM from 'nim-web-sdk-ng';\nexport default {\n  name: 'ConversationList',\n  data() {\n    return {\n      conversationList: [],\n      // 存储会话列表数据\n      syncFinish: false,\n      nim: null\n    };\n  },\n  mounted() {\n    const store = useStore();\n    this.nim = store.state.nim;\n    if (!this.nim) {\n      const nimConfig = this.$store.state.nimConfig;\n      this.nim = NIM.getInstance(nimConfig);\n      if (this.nim) {\n        console.error('=== NIM 已初始化');\n        this.$store.commit('setNim', this.nim);\n      }\n    } else {\n      console.error('=== NIM 不需要初始化');\n    }\n    this.nim.V2NIMConversationService.on(\"onSyncFinished\", () => {\n      console.log('=== NIM 同步完成');\n      this.syncFinish = true;\n      this.getConversationList();\n    });\n  },\n  methods: {\n    async getConversationList() {\n      console.log('=== NIM 获取会话列表');\n      try {\n        const result = await this.nim.V2NIMConversationService.getConversationList(0, 100);\n        if (result) {\n          this.conversationList = result.conversationList;\n          for (let index = 0; index < result.conversationList.length; index++) {\n            const element = result.conversationList[index];\n            console.log(`=== ${element.name}`);\n          }\n        }\n      } catch (err) {\n        console.error(`=== 获取最近会话列表失败: ${err} ==`);\n      }\n    }\n  }\n};","map":{"version":3,"names":["useStore","NIM","name","data","conversationList","syncFinish","nim","mounted","store","state","nimConfig","$store","getInstance","console","error","commit","V2NIMConversationService","on","log","getConversationList","methods","result","index","length","element","err"],"sources":["/Users/yaoxiao/Desktop/Trae/my-vue-app/src/components/ConversationList.vue"],"sourcesContent":["<template>\n  <div>\n    <h1>会话列表页面</h1>\n    <ul>\n      <!-- 渲染会话列表 -->\n      <li v-for=\"conversation in conversationList\" :key=\"conversation.id\">\n        {{ conversation.name }}\n      </li>\n    </ul>\n  </div>\n</template>\n\n<script>\nimport { useStore } from 'vuex';\nimport NIM from 'nim-web-sdk-ng';\n\nexport default {\n  name: 'ConversationList',\n  data() {\n    return {\n      conversationList: [], // 存储会话列表数据\n      syncFinish: false,\n      nim: null\n    };\n  },\n  mounted() {\n    const store = useStore();\n    this.nim = store.state.nim;\n\n    if (!this.nim) {\n      const nimConfig = this.$store.state.nimConfig;\n      this.nim = NIM.getInstance(nimConfig);\n      if (this.nim) {\n        console.error('=== NIM 已初始化');\n        this.$store.commit('setNim', this.nim);\n      }\n    } else {\n      console.error('=== NIM 不需要初始化');\n    }\n    this.nim.V2NIMConversationService.on(\"onSyncFinished\", () => {\n        console.log('=== NIM 同步完成');\n        this.syncFinish = true;\n        this.getConversationList();\n    });\n  },\n  methods: {\n    async getConversationList() {\n      console.log('=== NIM 获取会话列表');\n      try {\n        const result = await this.nim.V2NIMConversationService.getConversationList(0, 100);\n        if (result) {\n          this.conversationList = result.conversationList;\n          for (let index = 0; index < result.conversationList.length; index++) {\n            const element = result.conversationList[index];\n            console.log(`=== ${element.name}`);\n          }\n        }\n      } catch (err) {\n        console.error(`=== 获取最近会话列表失败: ${err} ==`);\n      }\n    }\n  }\n};\n</script>\n\n<style scoped>\n/* 全局样式 */\nbody {\n  font-family: Arial, sans-serif;\n}\n\n/* 标题样式 */\nh1 {\n  color: #333;\n  text-align: center;\n  margin-bottom: 20px;\n}\n\n/* 列表样式 */\nul {\n  list-style-type: none;\n  padding: 0;\n  margin: 0;\n}\n\n/* 列表项样式 */\nli {\n  padding: 15px;\n  border-bottom: 1px solid #e0e0e0;\n  text-align: left;\n  color: #333;\n  background-color: #f9f9f9;\n  transition: background-color 0.3s ease;\n}\n\n/* 鼠标悬停效果 */\nli:hover {\n  background-color: #e9e9e9;\n}\n</style>"],"mappings":"AAaA,SAASA,QAAO,QAAS,MAAM;AAC/B,OAAOC,GAAE,MAAO,gBAAgB;AAEhC,eAAe;EACbC,IAAI,EAAE,kBAAkB;EACxBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,gBAAgB,EAAE,EAAE;MAAE;MACtBC,UAAU,EAAE,KAAK;MACjBC,GAAG,EAAE;IACP,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,MAAMC,KAAI,GAAIR,QAAQ,CAAC,CAAC;IACxB,IAAI,CAACM,GAAE,GAAIE,KAAK,CAACC,KAAK,CAACH,GAAG;IAE1B,IAAI,CAAC,IAAI,CAACA,GAAG,EAAE;MACb,MAAMI,SAAQ,GAAI,IAAI,CAACC,MAAM,CAACF,KAAK,CAACC,SAAS;MAC7C,IAAI,CAACJ,GAAE,GAAIL,GAAG,CAACW,WAAW,CAACF,SAAS,CAAC;MACrC,IAAI,IAAI,CAACJ,GAAG,EAAE;QACZO,OAAO,CAACC,KAAK,CAAC,cAAc,CAAC;QAC7B,IAAI,CAACH,MAAM,CAACI,MAAM,CAAC,QAAQ,EAAE,IAAI,CAACT,GAAG,CAAC;MACxC;IACF,OAAO;MACLO,OAAO,CAACC,KAAK,CAAC,gBAAgB,CAAC;IACjC;IACA,IAAI,CAACR,GAAG,CAACU,wBAAwB,CAACC,EAAE,CAAC,gBAAgB,EAAE,MAAM;MACzDJ,OAAO,CAACK,GAAG,CAAC,cAAc,CAAC;MAC3B,IAAI,CAACb,UAAS,GAAI,IAAI;MACtB,IAAI,CAACc,mBAAmB,CAAC,CAAC;IAC9B,CAAC,CAAC;EACJ,CAAC;EACDC,OAAO,EAAE;IACP,MAAMD,mBAAmBA,CAAA,EAAG;MAC1BN,OAAO,CAACK,GAAG,CAAC,gBAAgB,CAAC;MAC7B,IAAI;QACF,MAAMG,MAAK,GAAI,MAAM,IAAI,CAACf,GAAG,CAACU,wBAAwB,CAACG,mBAAmB,CAAC,CAAC,EAAE,GAAG,CAAC;QAClF,IAAIE,MAAM,EAAE;UACV,IAAI,CAACjB,gBAAe,GAAIiB,MAAM,CAACjB,gBAAgB;UAC/C,KAAK,IAAIkB,KAAI,GAAI,CAAC,EAAEA,KAAI,GAAID,MAAM,CAACjB,gBAAgB,CAACmB,MAAM,EAAED,KAAK,EAAE,EAAE;YACnE,MAAME,OAAM,GAAIH,MAAM,CAACjB,gBAAgB,CAACkB,KAAK,CAAC;YAC9CT,OAAO,CAACK,GAAG,CAAC,OAAOM,OAAO,CAACtB,IAAI,EAAE,CAAC;UACpC;QACF;MACF,EAAE,OAAOuB,GAAG,EAAE;QACZZ,OAAO,CAACC,KAAK,CAAC,mBAAmBW,GAAG,KAAK,CAAC;MAC5C;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}