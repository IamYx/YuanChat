{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport NIM from 'nim-web-sdk-ng';\nimport router from '@/router';\nexport default {\n  data() {\n    return {\n      username: '',\n      password: '',\n      nim: null\n    };\n  },\n  methods: {\n    handleLogin() {\n      this.nim = NIM.getInstance({\n        appkey: '4727023efa991d31d61b3b32e819bd5b',\n        debugLevel: \"debug\",\n        apiVersion: \"v2\"\n      });\n      this.$store.commit('setNim', this.nim); // 存储 nim 实例到 Vuex\n      const storedNim = this.$store.state.nim;\n      if (storedNim) {\n        console.log('=== nim 实例存储成功:', storedNim);\n      } else {\n        console.error('=== nim 实例存储失败');\n      }\n      this.nim.V2NIMLoginService.login(this.username, this.password, {\n        \"forceMode\": false\n      });\n      const theListnerFn = status => {\n        switch (status) {\n          case 0:\n            console.log('=== 登出成功');\n            break;\n          case 1:\n            console.log('=== 登录成功');\n            // Login successful, navigate to the conversation list page\n            router.push({\n              name: 'ConversationList'\n            }).then(() => {\n              console.log('=== 成功跳转到了 ConversationList 页面');\n            }).catch(error => {\n              console.error('=== 路由跳转失败:', error);\n            });\n            break;\n          case 2:\n            console.log('=== 登录中');\n            break;\n          case 3:\n            console.log('=== 登录失败');\n            break;\n          default:\n            console.log('=== 未知的登录状态:', status);\n        }\n      };\n      this.nim.V2NIMLoginService.on(\"onLoginStatus\", theListnerFn);\n    }\n  }\n};","map":{"version":3,"names":["NIM","router","data","username","password","nim","methods","handleLogin","getInstance","appkey","debugLevel","apiVersion","$store","commit","storedNim","state","console","log","error","V2NIMLoginService","login","theListnerFn","status","push","name","then","catch","on"],"sources":["/Users/yaoxiao/Desktop/Trae/my-vue-app/src/components/HelloWorld.vue"],"sourcesContent":["<template>\n  <div class=\"login-container\">\n    <h1>登录页面</h1>\n    <form @submit.prevent=\"handleLogin\">\n      <input type=\"text\" v-model=\"username\" placeholder=\"用户名\" required />\n      <input type=\"password\" v-model=\"password\" placeholder=\"密码\" required />\n      <button type=\"submit\">登录</button>\n    </form>\n  </div>\n</template>\n\n<script>\nimport NIM from 'nim-web-sdk-ng';\nimport router from '@/router';\n\nexport default {\n  data() {\n    return {\n      username: '',\n      password: '',\n      nim: null\n    };\n  },\n  methods: {\n    handleLogin() {\n      this.nim = NIM.getInstance({\n        appkey: '4727023efa991d31d61b3b32e819bd5b',\n        debugLevel: \"debug\",\n        apiVersion: \"v2\"\n      });\n\n      this.$store.commit('setNim', this.nim); // 存储 nim 实例到 Vuex\n      const storedNim = this.$store.state.nim;\n      if (storedNim) {\n          console.log('=== nim 实例存储成功:', storedNim);\n      } else {\n          console.error('=== nim 实例存储失败');\n      }\n\n      this.nim.V2NIMLoginService.login(this.username, this.password, {\n        \"forceMode\": false\n      });\n\n      const theListnerFn = (status) => {\n        switch (status) {\n          case 0:\n            console.log('=== 登出成功');\n            break;\n          case 1:\n            console.log('=== 登录成功');\n            // Login successful, navigate to the conversation list page\n            router.push({ name: 'ConversationList' })\n              .then(() => {\n                  console.log('=== 成功跳转到了 ConversationList 页面');\n              })\n              .catch((error) => {\n                  console.error('=== 路由跳转失败:', error);\n              });\n            break;\n          case 2:\n            console.log('=== 登录中');\n            break;\n          case 3:\n            console.log('=== 登录失败');\n            break;\n          default:\n            console.log('=== 未知的登录状态:', status);\n        }\n      };\n\n      this.nim.V2NIMLoginService.on(\"onLoginStatus\", theListnerFn);\n    }\n  }\n};\n</script>\n\n<style scoped>\n.login-container {\n  max-width: 300px;\n  margin: 0 auto;\n  padding: 20px;\n  border: 1px solid #ccc;\n  border-radius: 5px;\n  background-color: #f9f9f9;\n}\n\n.login-container h1 {\n  text-align: center;\n  margin-bottom: 20px;\n  /* 修改字体样式 */\n  font-family: \"Segoe UI\", Tahoma, Geneva, Verdana, sans-serif;\n  font-size: 28px;\n  color: #333;\n  font-weight: 600;\n  text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.1);\n}\n\n.login-container input {\n  width: calc(100% - 22px);\n  padding: 10px;\n  margin-bottom: 15px;\n  border: 1px solid #ccc;\n  border-radius: 3px;\n  box-sizing: border-box;\n}\n\n.login-container button {\n  width: 100%;\n  padding: 10px;\n  background-color: #007bff;\n  color: #fff;\n  border: none;\n  border-radius: 3px;\n  cursor: pointer;\n}\n\n.login-container button:hover {\n  background-color: #0056b3;\n}\n</style>"],"mappings":";AAYA,OAAOA,GAAE,MAAO,gBAAgB;AAChC,OAAOC,MAAK,MAAO,UAAU;AAE7B,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE,EAAE;MACZC,QAAQ,EAAE,EAAE;MACZC,GAAG,EAAE;IACP,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,WAAWA,CAAA,EAAG;MACZ,IAAI,CAACF,GAAE,GAAIL,GAAG,CAACQ,WAAW,CAAC;QACzBC,MAAM,EAAE,kCAAkC;QAC1CC,UAAU,EAAE,OAAO;QACnBC,UAAU,EAAE;MACd,CAAC,CAAC;MAEF,IAAI,CAACC,MAAM,CAACC,MAAM,CAAC,QAAQ,EAAE,IAAI,CAACR,GAAG,CAAC,EAAE;MACxC,MAAMS,SAAQ,GAAI,IAAI,CAACF,MAAM,CAACG,KAAK,CAACV,GAAG;MACvC,IAAIS,SAAS,EAAE;QACXE,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEH,SAAS,CAAC;MAC7C,OAAO;QACHE,OAAO,CAACE,KAAK,CAAC,gBAAgB,CAAC;MACnC;MAEA,IAAI,CAACb,GAAG,CAACc,iBAAiB,CAACC,KAAK,CAAC,IAAI,CAACjB,QAAQ,EAAE,IAAI,CAACC,QAAQ,EAAE;QAC7D,WAAW,EAAE;MACf,CAAC,CAAC;MAEF,MAAMiB,YAAW,GAAKC,MAAM,IAAK;QAC/B,QAAQA,MAAM;UACZ,KAAK,CAAC;YACJN,OAAO,CAACC,GAAG,CAAC,UAAU,CAAC;YACvB;UACF,KAAK,CAAC;YACJD,OAAO,CAACC,GAAG,CAAC,UAAU,CAAC;YACvB;YACAhB,MAAM,CAACsB,IAAI,CAAC;cAAEC,IAAI,EAAE;YAAmB,CAAC,EACrCC,IAAI,CAAC,MAAM;cACRT,OAAO,CAACC,GAAG,CAAC,gCAAgC,CAAC;YACjD,CAAC,EACAS,KAAK,CAAER,KAAK,IAAK;cACdF,OAAO,CAACE,KAAK,CAAC,aAAa,EAAEA,KAAK,CAAC;YACvC,CAAC,CAAC;YACJ;UACF,KAAK,CAAC;YACJF,OAAO,CAACC,GAAG,CAAC,SAAS,CAAC;YACtB;UACF,KAAK,CAAC;YACJD,OAAO,CAACC,GAAG,CAAC,UAAU,CAAC;YACvB;UACF;YACED,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEK,MAAM,CAAC;QACvC;MACF,CAAC;MAED,IAAI,CAACjB,GAAG,CAACc,iBAAiB,CAACQ,EAAE,CAAC,eAAe,EAAEN,YAAY,CAAC;IAC9D;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}