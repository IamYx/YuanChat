{"ast":null,"code":"import { useStore } from 'vuex';\nimport NIM from 'nim-web-sdk-ng';\nexport default {\n  name: 'ConversationList',\n  data() {\n    return {\n      conversationList: [],\n      // 存储会话列表数据\n      syncFinish: false,\n      nim: null\n    };\n  },\n  mounted() {\n    const store = useStore();\n    this.nim = store.state.nim;\n    if (!this.nim) {\n      const nimConfig = this.$store.state.nimConfig;\n      console.log(`=== NIM 初始化配置 ${nimConfig}`);\n      this.nim = NIM.getInstance({\n        appkey: nimConfig[0],\n        debugLevel: \"debug\",\n        apiVersion: \"v2\"\n      });\n      if (this.nim) {\n        this.$store.commit('setNim', this.nim);\n        console.log('=== NIM 已初始化');\n        if (this.nim.V2NIMLoginService) {\n          this.nim.V2NIMLoginService.login(nimConfig[1], nimConfig[2], {\n            \"forceMode\": false\n          }).then(() => {\n            console.log('=== 登录成功');\n          }).catch(err => {\n            console.error('=== 登录失败:', err);\n          });\n        }\n      }\n    } else {\n      console.log('=== NIM 不需要初始化');\n    }\n    this.nim.V2NIMConversationService.on(\"onSyncFinished\", () => {\n      console.log('=== NIM 同步完成');\n      this.syncFinish = true;\n      this.getConversationList();\n    });\n  },\n  methods: {\n    async getConversationList() {\n      console.log('=== NIM 获取会话列表');\n      try {\n        const result = await this.nim.V2NIMConversationService.getConversationList(0, 100);\n        if (result) {\n          this.conversationList = result.conversationList;\n          for (let index = 0; index < result.conversationList.length; index++) {\n            const element = result.conversationList[index];\n            console.log(`=== ${element.name}`);\n          }\n        }\n      } catch (err) {\n        console.error(`=== 获取最近会话列表失败: ${err} ==`);\n      }\n    },\n    getAvatar(conversation) {\n      if (conversation.avatar) {\n        return conversation.avatar;\n      }\n      const initials = conversation.name.slice(0, 2).toUpperCase();\n      const canvas = document.createElement('canvas');\n      canvas.width = 40;\n      canvas.height = 40;\n      const ctx = canvas.getContext('2d');\n      ctx.fillStyle = '#ccc';\n      ctx.fillRect(0, 0, canvas.width, canvas.height);\n      ctx.font = '20px Arial';\n      ctx.fillStyle = '#fff';\n      ctx.textAlign = 'center';\n      ctx.textBaseline = 'middle';\n      ctx.fillText(initials, canvas.width / 2, canvas.height / 2);\n      return canvas.toDataURL();\n    }\n  }\n};","map":{"version":3,"names":["useStore","NIM","name","data","conversationList","syncFinish","nim","mounted","store","state","nimConfig","$store","console","log","getInstance","appkey","debugLevel","apiVersion","commit","V2NIMLoginService","login","then","catch","err","error","V2NIMConversationService","on","getConversationList","methods","result","index","length","element","getAvatar","conversation","avatar","initials","slice","toUpperCase","canvas","document","createElement","width","height","ctx","getContext","fillStyle","fillRect","font","textAlign","textBaseline","fillText","toDataURL"],"sources":["/Users/yaoxiao/Desktop/Trae/my-vue-app/src/components/ConversationList.vue"],"sourcesContent":["<template>\n  <div>\n    <h1>最近会话</h1>\n    <ul>\n      <!-- 渲染会话列表 -->\n      <li v-for=\"conversation in conversationList\" :key=\"conversation.id\">\n        <!-- 显示头像 -->\n        <img :src=\"getAvatar(conversation)\" alt=\"Avatar\" class=\"avatar\">\n        {{ conversation.name }}\n      </li>\n    </ul>\n  </div>\n</template>\n\n<script>\nimport { useStore } from 'vuex';\nimport NIM from 'nim-web-sdk-ng';\n\nexport default {\n  name: 'ConversationList',\n  data() {\n    return {\n      conversationList: [], // 存储会话列表数据\n      syncFinish: false,\n      nim: null\n    };\n  },\n  mounted() {\n    const store = useStore();\n    this.nim = store.state.nim;\n\n    if (!this.nim) {\n      const nimConfig = this.$store.state.nimConfig;\n      console.log(`=== NIM 初始化配置 ${nimConfig}`);\n      this.nim = NIM.getInstance({\n        appkey: nimConfig[0],\n        debugLevel: \"debug\",\n        apiVersion: \"v2\"\n      });\n      if (this.nim) {\n        this.$store.commit('setNim', this.nim);\n        console.log('=== NIM 已初始化');\n        if (this.nim.V2NIMLoginService) {\n          this.nim.V2NIMLoginService.login(nimConfig[1], nimConfig[2], {\n            \"forceMode\": false\n          }).then(() => {\n            console.log('=== 登录成功');\n          }).catch((err) => {\n            console.error('=== 登录失败:', err);\n          });\n        }\n\n      }\n    } else {\n      console.log('=== NIM 不需要初始化');\n    }\n    this.nim.V2NIMConversationService.on(\"onSyncFinished\", () => {\n      console.log('=== NIM 同步完成');\n      this.syncFinish = true;\n      this.getConversationList();\n    });\n  },\n  methods: {\n    async getConversationList() {\n      console.log('=== NIM 获取会话列表');\n      try {\n        const result = await this.nim.V2NIMConversationService.getConversationList(0, 100);\n        if (result) {\n          this.conversationList = result.conversationList;\n          for (let index = 0; index < result.conversationList.length; index++) {\n            const element = result.conversationList[index];\n            console.log(`=== ${element.name}`);\n          }\n        }\n      } catch (err) {\n        console.error(`=== 获取最近会话列表失败: ${err} ==`);\n      }\n    },\n    getAvatar(conversation) {\n      if (conversation.avatar) {\n        return conversation.avatar;\n      }\n      const initials = conversation.name.slice(0, 2).toUpperCase();\n      const canvas = document.createElement('canvas');\n      canvas.width = 40;\n      canvas.height = 40;\n      const ctx = canvas.getContext('2d');\n      ctx.fillStyle = '#ccc';\n      ctx.fillRect(0, 0, canvas.width, canvas.height);\n      ctx.font = '20px Arial';\n      ctx.fillStyle = '#fff';\n      ctx.textAlign = 'center';\n      ctx.textBaseline = 'middle';\n      ctx.fillText(initials, canvas.width / 2, canvas.height / 2);\n      return canvas.toDataURL();\n    }\n  }\n};\n</script>\n\n<style scoped>\n/* 头像样式 */\n.avatar {\n  width: 40px;\n  height: 40px;\n  border-radius: 50%;\n  margin-right: 10px;\n  vertical-align: middle;\n}\n\n/* 全局样式 */\nbody {\n  font-family: Arial, sans-serif;\n}\n\n/* 标题样式 */\nh1 {\n  color: #333;\n  text-align: center;\n  margin-bottom: 20px;\n}\n\n/* 列表样式 */\nul {\n  list-style-type: none;\n  padding: 0;\n  margin: 0;\n}\n\n/* 列表项样式 */\nli {\n  padding: 15px;\n  border-bottom: 1px solid #e0e0e0;\n  text-align: left;\n  color: #333;\n  background-color: #f9f9f9;\n  transition: background-color 0.3s ease;\n}\n\n/* 鼠标悬停效果 */\nli:hover {\n  background-color: #e9e9e9;\n}\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}