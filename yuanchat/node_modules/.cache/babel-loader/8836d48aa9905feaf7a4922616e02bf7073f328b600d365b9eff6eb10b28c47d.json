{"ast":null,"code":"import { createApp } from 'vue';\nimport App from './App.vue';\nimport router from './router';\nimport { createStore } from 'vuex';\nimport createPersistedState from 'vuex-persistedstate';\n\n// 创建一个简单的 store 示例\nconst store = createStore({\n  state() {\n    return {\n      nim: null\n    };\n  },\n  mutations: {\n    setNim(state, nim) {\n      state.nim = nim;\n    }\n  },\n  plugins: [createPersistedState({\n    reducer: state => {\n      // 深度过滤掉包含循环引用的属性\n      const filteredState = {};\n      for (const key in state) {\n        if (typeof state[key] === 'object' && state[key] !== null) {\n          // 避免存储复杂对象，只存储必要信息\n          if (key === 'nim') {\n            // 这里假设 nim 有一些简单的属性可以存储\n            // 例如 nim.id 等，根据实际情况修改\n            filteredState[key] = {\n              // 存储必要的信息\n              // id: state[key].id \n            };\n          } else {\n            filteredState[key] = {\n              ...state[key]\n            };\n          }\n        } else {\n          filteredState[key] = state[key];\n        }\n      }\n      return filteredState;\n    }\n  })]\n});\nconst app = createApp(App);\napp.use(router);\napp.use(store);\napp.mount('#app');","map":{"version":3,"names":["createApp","App","router","createStore","createPersistedState","store","state","nim","mutations","setNim","plugins","reducer","filteredState","key","app","use","mount"],"sources":["/Users/yaoxiao/Desktop/Trae/my-vue-app/src/main.js"],"sourcesContent":["import { createApp } from 'vue';\nimport App from './App.vue';\nimport router from './router';\nimport { createStore } from 'vuex';\nimport createPersistedState from 'vuex-persistedstate';\n\n// 创建一个简单的 store 示例\nconst store = createStore({\n    state() {\n        return {\n            nim: null\n        };\n    },\n    mutations: {\n        setNim(state, nim) {\n            state.nim = nim;\n        }\n    },\n    plugins: [\n        createPersistedState({\n            reducer: (state) => {\n                // 深度过滤掉包含循环引用的属性\n                const filteredState = {};\n                for (const key in state) {\n                    if (typeof state[key] === 'object' && state[key]!== null) {\n                        // 避免存储复杂对象，只存储必要信息\n                        if (key === 'nim') {\n                            // 这里假设 nim 有一些简单的属性可以存储\n                            // 例如 nim.id 等，根据实际情况修改\n                            filteredState[key] = {\n                                // 存储必要的信息\n                                // id: state[key].id \n                            };\n                        } else {\n                            filteredState[key] = { ...state[key] };\n                        }\n                    } else {\n                        filteredState[key] = state[key];\n                    }\n                }\n                return filteredState;\n            }\n        })\n    ]\n});\n\nconst app = createApp(App);\napp.use(router);\napp.use(store);\napp.mount('#app');\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,KAAK;AAC/B,OAAOC,GAAG,MAAM,WAAW;AAC3B,OAAOC,MAAM,MAAM,UAAU;AAC7B,SAASC,WAAW,QAAQ,MAAM;AAClC,OAAOC,oBAAoB,MAAM,qBAAqB;;AAEtD;AACA,MAAMC,KAAK,GAAGF,WAAW,CAAC;EACtBG,KAAKA,CAAA,EAAG;IACJ,OAAO;MACHC,GAAG,EAAE;IACT,CAAC;EACL,CAAC;EACDC,SAAS,EAAE;IACPC,MAAMA,CAACH,KAAK,EAAEC,GAAG,EAAE;MACfD,KAAK,CAACC,GAAG,GAAGA,GAAG;IACnB;EACJ,CAAC;EACDG,OAAO,EAAE,CACLN,oBAAoB,CAAC;IACjBO,OAAO,EAAGL,KAAK,IAAK;MAChB;MACA,MAAMM,aAAa,GAAG,CAAC,CAAC;MACxB,KAAK,MAAMC,GAAG,IAAIP,KAAK,EAAE;QACrB,IAAI,OAAOA,KAAK,CAACO,GAAG,CAAC,KAAK,QAAQ,IAAIP,KAAK,CAACO,GAAG,CAAC,KAAI,IAAI,EAAE;UACtD;UACA,IAAIA,GAAG,KAAK,KAAK,EAAE;YACf;YACA;YACAD,aAAa,CAACC,GAAG,CAAC,GAAG;cACjB;cACA;YAAA,CACH;UACL,CAAC,MAAM;YACHD,aAAa,CAACC,GAAG,CAAC,GAAG;cAAE,GAAGP,KAAK,CAACO,GAAG;YAAE,CAAC;UAC1C;QACJ,CAAC,MAAM;UACHD,aAAa,CAACC,GAAG,CAAC,GAAGP,KAAK,CAACO,GAAG,CAAC;QACnC;MACJ;MACA,OAAOD,aAAa;IACxB;EACJ,CAAC,CAAC;AAEV,CAAC,CAAC;AAEF,MAAME,GAAG,GAAGd,SAAS,CAACC,GAAG,CAAC;AAC1Ba,GAAG,CAACC,GAAG,CAACb,MAAM,CAAC;AACfY,GAAG,CAACC,GAAG,CAACV,KAAK,CAAC;AACdS,GAAG,CAACE,KAAK,CAAC,MAAM,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}