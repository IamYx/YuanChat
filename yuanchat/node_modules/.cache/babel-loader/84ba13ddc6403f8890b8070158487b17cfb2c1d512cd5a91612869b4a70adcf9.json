{"ast":null,"code":"import { createApp } from 'vue';\nimport App from './App.vue';\nimport router from './router';\nimport { createStore } from 'vuex';\nimport createPersistedState from 'vuex-persistedstate';\nimport NIM from 'nim-web-sdk-ng';\n\n// 创建一个简单的 store 示例\nconst store = createStore({\n  state() {\n    return {\n      nim: null,\n      nimConfig: null // 存储 nim 初始化所需的配置信息\n    };\n  },\n  mutations: {\n    setNim(state, nim) {\n      state.nim = nim;\n    },\n    setNimConfig(state, config) {\n      state.nimConfig = config;\n    }\n  },\n  plugins: [createPersistedState({\n    reducer: state => {\n      const filteredState = {};\n      for (const key in state) {\n        if (key === 'nim') {\n          // 不直接存储 nim 实例，而是存储配置信息\n          filteredState.nimConfig = state.nimConfig;\n        } else {\n          filteredState[key] = state[key];\n        }\n      }\n      return filteredState;\n    }\n  })]\n});\nconst app = createApp(App);\napp.use(router);\napp.use(store);\napp.mount('#app');\n\n// 在登录成功后设置 nim 实例和配置信息\n// 假设在登录组件中\n// store.commit('setNimConfig', { appKey: 'your_app_key', account: 'your_account', token: 'your_token' });\n// const nim = NIM.getInstance({\n//     appKey: 'your_app_key',\n//     account: 'your_account',\n//     token: 'your_token',\n//     // 其他配置\n// });\n// store.commit('setNim', nim);","map":{"version":3,"names":["createApp","App","router","createStore","createPersistedState","NIM","store","state","nim","nimConfig","mutations","setNim","setNimConfig","config","plugins","reducer","filteredState","key","app","use","mount"],"sources":["/Users/yaoxiao/Desktop/Trae/my-vue-app/src/main.js"],"sourcesContent":["import { createApp } from 'vue';\nimport App from './App.vue';\nimport router from './router';\nimport { createStore } from 'vuex';\nimport createPersistedState from 'vuex-persistedstate';\nimport NIM from 'nim-web-sdk-ng';\n\n// 创建一个简单的 store 示例\nconst store = createStore({\n    state() {\n        return {\n            nim: null,\n            nimConfig: null // 存储 nim 初始化所需的配置信息\n        };\n    },\n    mutations: {\n        setNim(state, nim) {\n            state.nim = nim;\n        },\n        setNimConfig(state, config) {\n            state.nimConfig = config;\n        }\n    },\n    plugins: [\n        createPersistedState({\n            reducer: (state) => {\n                const filteredState = {};\n                for (const key in state) {\n                    if (key === 'nim') {\n                        // 不直接存储 nim 实例，而是存储配置信息\n                        filteredState.nimConfig = state.nimConfig;\n                    } else {\n                        filteredState[key] = state[key];\n                    }\n                }\n                return filteredState;\n            }\n        })\n    ]\n});\n\nconst app = createApp(App);\napp.use(router);\napp.use(store);\napp.mount('#app');\n\n// 在登录成功后设置 nim 实例和配置信息\n// 假设在登录组件中\n// store.commit('setNimConfig', { appKey: 'your_app_key', account: 'your_account', token: 'your_token' });\n// const nim = NIM.getInstance({\n//     appKey: 'your_app_key',\n//     account: 'your_account',\n//     token: 'your_token',\n//     // 其他配置\n// });\n// store.commit('setNim', nim);\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,KAAK;AAC/B,OAAOC,GAAG,MAAM,WAAW;AAC3B,OAAOC,MAAM,MAAM,UAAU;AAC7B,SAASC,WAAW,QAAQ,MAAM;AAClC,OAAOC,oBAAoB,MAAM,qBAAqB;AACtD,OAAOC,GAAG,MAAM,gBAAgB;;AAEhC;AACA,MAAMC,KAAK,GAAGH,WAAW,CAAC;EACtBI,KAAKA,CAAA,EAAG;IACJ,OAAO;MACHC,GAAG,EAAE,IAAI;MACTC,SAAS,EAAE,IAAI,CAAC;IACpB,CAAC;EACL,CAAC;EACDC,SAAS,EAAE;IACPC,MAAMA,CAACJ,KAAK,EAAEC,GAAG,EAAE;MACfD,KAAK,CAACC,GAAG,GAAGA,GAAG;IACnB,CAAC;IACDI,YAAYA,CAACL,KAAK,EAAEM,MAAM,EAAE;MACxBN,KAAK,CAACE,SAAS,GAAGI,MAAM;IAC5B;EACJ,CAAC;EACDC,OAAO,EAAE,CACLV,oBAAoB,CAAC;IACjBW,OAAO,EAAGR,KAAK,IAAK;MAChB,MAAMS,aAAa,GAAG,CAAC,CAAC;MACxB,KAAK,MAAMC,GAAG,IAAIV,KAAK,EAAE;QACrB,IAAIU,GAAG,KAAK,KAAK,EAAE;UACf;UACAD,aAAa,CAACP,SAAS,GAAGF,KAAK,CAACE,SAAS;QAC7C,CAAC,MAAM;UACHO,aAAa,CAACC,GAAG,CAAC,GAAGV,KAAK,CAACU,GAAG,CAAC;QACnC;MACJ;MACA,OAAOD,aAAa;IACxB;EACJ,CAAC,CAAC;AAEV,CAAC,CAAC;AAEF,MAAME,GAAG,GAAGlB,SAAS,CAACC,GAAG,CAAC;AAC1BiB,GAAG,CAACC,GAAG,CAACjB,MAAM,CAAC;AACfgB,GAAG,CAACC,GAAG,CAACb,KAAK,CAAC;AACdY,GAAG,CAACE,KAAK,CAAC,MAAM,CAAC;;AAEjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}